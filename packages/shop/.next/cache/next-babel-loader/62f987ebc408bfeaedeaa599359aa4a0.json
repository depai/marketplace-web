{"ast":null,"code":"var _jsxFileName = \"E:\\\\pickbazar-master\\\\pickbazar-master\\\\packages\\\\shop\\\\containers\\\\Checkout\\\\Checkout.tsx\";\nvar __jsx = React.createElement;\nimport React, { useContext, useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport gql from 'graphql-tag';\nimport Button from 'components/Button/Button';\nimport RadioCard from 'components/RadioCard/RadioCard';\nimport RadioGroup from 'components/RadioGroup/RadioGroup';\nimport PaymentGroup from 'components/PaymentGroup/PaymentGroup';\nimport Loader from 'components/Loader/Loader';\nimport UpdateAddress from './Update/UpdateAddress';\nimport UpdateContact from './Update/UpdateContact';\nimport StripePaymentForm from '../Payment/StripePaymentForm';\nimport { DELETE_ADDRESS } from 'graphql/mutation/address';\nimport { DELETE_CARD } from 'graphql/mutation/card';\nimport { DELETE_CONTACT } from 'graphql/mutation/contact';\nimport { openModal } from '@redq/reuse-modal';\nimport { useMutation } from '@apollo/react-hooks';\nimport { CartContext } from 'contexts/cart/cart.context';\nimport CheckcoutWrapper, { CheckoutContainer, OrderSummary, OrderSummaryItem, OrderLabel, OrderAmount, DeliverySchedule, Heading, DeliveryAddress, ButtonGroup, Contact, PaymentOption, CheckoutSubmit, CouponBoxWrapper, ErrorMsg } from './Checkout.style';\nimport { getCartProducts, getSubTotalPrice, getTotalPrice, getDiscount, getCoupon } from '../../helper/utility';\nimport CouponBox, { CouponDisplay } from 'components/CouponBox/CouponBox';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { FormattedMessage } from 'react-intl'; // The type of props Checkout Form receives\n\nconst APPLY_COUPON = gql`\n  mutation applyCoupon($code: String!) {\n    applyCoupon(code: $code) {\n      id\n      code\n      discountInPercent\n    }\n  }\n`;\n\nconst Checkout = ({\n  token,\n  deviceType\n}) => {\n  const {\n    0: couponCode,\n    1: setCouponCode\n  } = useState('');\n  const {\n    0: couponError,\n    1: setError\n  } = useState('');\n  const {\n    0: processedDiscount,\n    1: setProcessedDiscount\n  } = useState(getDiscount());\n  const {\n    0: processedCoupon,\n    1: setProcessedCoupon\n  } = useState(getCoupon());\n  const {\n    state,\n    dispatch\n  } = useContext(ProfileContext);\n  const {\n    removeCoupon,\n    discount,\n    coupon,\n    addCoupon,\n    clearCart\n  } = useContext(CartContext);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: isValid,\n    1: setIsValid\n  } = useState(false);\n  const {\n    address,\n    contact,\n    card,\n    schedules\n  } = state;\n  const items = getCartProducts();\n  const subTotalPrice = getSubTotalPrice();\n  const totalPrice = getTotalPrice();\n  const [deleteContactMutation] = useMutation(DELETE_CONTACT);\n  const [deleteAddressMutation] = useMutation(DELETE_ADDRESS);\n  const [deletePaymentCardMutation] = useMutation(DELETE_CARD);\n  const [applyedCoupon] = useMutation(APPLY_COUPON);\n\n  const handleSubmit = async () => {\n    setLoading(true);\n\n    if (isValid) {\n      clearCart();\n      Router.push('/order-recived');\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    setProcessedDiscount(discount);\n    setProcessedCoupon(coupon);\n  }, [coupon]);\n  useEffect(() => {\n    if (totalPrice > 0 && items.length > 0 && address.length && contact.length && card.length && schedules.length) {\n      setIsValid(true);\n    }\n  }, [state]); // Add or edit modal\n\n  const handleModal = (modalComponent, modalProps = {}, className = 'add-address-modal') => {\n    openModal({\n      show: true,\n      config: {\n        width: 360,\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        className: className\n      },\n      closeOnClickOutside: true,\n      component: modalComponent,\n      componentProps: {\n        item: modalProps\n      }\n    });\n  };\n\n  const handleEditDelete = async (item, type, name) => {\n    if (type === 'edit') {\n      const modalComponent = name === 'address' ? UpdateAddress : UpdateContact;\n      handleModal(modalComponent, item);\n    } else {\n      switch (name) {\n        case 'payment':\n          dispatch({\n            type: 'DELETE_CARD',\n            payload: item.id\n          });\n          return await deletePaymentCardMutation({\n            variables: {\n              cardId: JSON.stringify(item.id)\n            }\n          });\n\n        case 'contact':\n          dispatch({\n            type: 'DELETE_CONTACT',\n            payload: item.id\n          });\n          return await deleteContactMutation({\n            variables: {\n              contactId: JSON.stringify(item.id)\n            }\n          });\n\n        case 'address':\n          dispatch({\n            type: 'DELETE_ADDRESS',\n            payload: item.id\n          });\n          return await deleteAddressMutation({\n            variables: {\n              addressId: JSON.stringify(item.id)\n            }\n          });\n\n        default:\n          return false;\n      }\n    }\n  };\n\n  const handleApplyCoupon = async () => {\n    const {\n      data: {\n        applyCoupon\n      }\n    } = await applyedCoupon({\n      variables: {\n        code: couponCode\n      }\n    });\n\n    if (applyCoupon && applyCoupon.discountInPercent) {\n      addCoupon(applyCoupon);\n      setCouponCode('');\n    } else {\n      setError('Invalid Coupon');\n    }\n  };\n\n  const handleOnUpdate = couponCode => {\n    setCouponCode(couponCode);\n  };\n\n  return __jsx(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, __jsx(CheckcoutWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, __jsx(CheckoutContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, __jsx(OrderSummary, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, __jsx(OrderSummaryItem, {\n    style: {\n      marginBottom: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, __jsx(OrderLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, __jsx(FormattedMessage, {\n    id: \"subTotal\",\n    defaultMessage: \"Subtotal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }), \" (\", items.length, ' ', __jsx(FormattedMessage, {\n    id: \"itemsText\",\n    defaultMessage: \"items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }), \")\"), __jsx(OrderAmount, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, \"$\", subTotalPrice || 0)), __jsx(OrderSummaryItem, {\n    style: {\n      marginBottom: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, __jsx(OrderLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, __jsx(FormattedMessage, {\n    id: \"shippinFeeText\",\n    defaultMessage: \"Shipping Fee\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  })), __jsx(OrderAmount, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, \"$0\")), __jsx(OrderSummaryItem, {\n    style: {\n      marginBottom: 30\n    },\n    className: \"voucherWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, __jsx(OrderLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, __jsx(FormattedMessage, {\n    id: \"voucherText\",\n    defaultMessage: \"Voucher\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  })), processedDiscount && processedCoupon.code !== 'DEFAULT_COUPON' ? __jsx(CouponDisplay, {\n    code: processedCoupon.code,\n    sign: \"-\",\n    currency: \"$\",\n    price: discount,\n    onClick: e => {\n      e.preventDefault();\n      removeCoupon();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }) : __jsx(React.Fragment, null, __jsx(CouponBoxWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, __jsx(CouponBox, {\n    buttonTitle: \"Apply\",\n    intlCouponBoxPlaceholder: \"couponPlaceholder\",\n    onClick: handleApplyCoupon,\n    value: couponCode,\n    onUpdate: handleOnUpdate,\n    style: {\n      maxWidth: 350,\n      height: 50\n    },\n    intlCouponApplyButton: \"voucherApply\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }), couponError && __jsx(ErrorMsg, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, __jsx(FormattedMessage, {\n    id: \"couponError\",\n    defaultMessage: couponError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }))))), __jsx(OrderSummaryItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, __jsx(OrderLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, __jsx(FormattedMessage, {\n    id: \"totalText\",\n    defaultMessage: \"Total\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  })), __jsx(OrderAmount, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, \"$\", totalPrice))), __jsx(DeliverySchedule, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, __jsx(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, __jsx(FormattedMessage, {\n    id: \"deliverySchedule\",\n    defaultMessage: \"Select Your Delivery Schedule\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  })), __jsx(RadioGroup, {\n    items: schedules,\n    component: item => __jsx(RadioCard, {\n      id: item.id,\n      key: item.id,\n      title: item.title,\n      content: item.time_slot,\n      name: \"schedule\",\n      checked: item.type === 'primary',\n      withActionButtons: false,\n      onChange: () => dispatch({\n        type: 'SET_PRIMARY_SCHEDULE',\n        payload: item.id.toString()\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  })), __jsx(DeliveryAddress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }, __jsx(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }, __jsx(FormattedMessage, {\n    id: \"checkoutDeliveryAddress\",\n    defaultMessage: \"Select Your Delivery Address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  })), __jsx(ButtonGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  }, __jsx(RadioGroup, {\n    items: address,\n    component: item => __jsx(RadioCard, {\n      id: item.id,\n      key: item.id,\n      title: item.name,\n      content: item.info,\n      name: \"address\",\n      checked: item.type === 'primary',\n      onChange: () => dispatch({\n        type: 'SET_PRIMARY_ADDRESS',\n        payload: item.id.toString()\n      }),\n      onEdit: () => handleEditDelete(item, 'edit', 'address'),\n      onDelete: () => handleEditDelete(item, 'delete', 'address'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }),\n    secondaryComponent: __jsx(Button, {\n      title: \"Add Adderss\",\n      iconPosition: \"right\",\n      colors: \"primary\",\n      size: \"small\",\n      variant: \"outlined\",\n      type: \"button\",\n      intlButtonId: \"addAddressBtn\",\n      onClick: () => handleModal(UpdateAddress, 'add-address-modal'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }))), __jsx(Contact, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336\n    },\n    __self: this\n  }, __jsx(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337\n    },\n    __self: this\n  }, __jsx(FormattedMessage, {\n    id: \"contactNumberText\",\n    defaultMessage: \"Select Your Contact Number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338\n    },\n    __self: this\n  })), __jsx(ButtonGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343\n    },\n    __self: this\n  }, __jsx(RadioGroup, {\n    items: contact,\n    component: item => __jsx(RadioCard, {\n      id: item.id,\n      key: item.id,\n      title: item.type,\n      content: item.number,\n      checked: item.type === 'primary',\n      onChange: () => dispatch({\n        type: 'SET_PRIMARY_CONTACT',\n        payload: item.id.toString()\n      }),\n      name: \"contact\",\n      onEdit: () => handleEditDelete(item, 'edit', 'contact'),\n      onDelete: () => handleEditDelete(item, 'delete', 'contact'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }),\n    secondaryComponent: __jsx(Button, {\n      title: \"Add Contact\",\n      iconPosition: \"right\",\n      colors: \"primary\",\n      size: \"small\",\n      variant: \"outlined\",\n      type: \"button\",\n      intlButtonId: \"addContactBtn\",\n      onClick: () => handleModal(UpdateContact, 'add-contact-modal'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344\n    },\n    __self: this\n  }))), __jsx(PaymentOption, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382\n    },\n    __self: this\n  }, __jsx(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383\n    },\n    __self: this\n  }, __jsx(FormattedMessage, {\n    id: \"selectPaymentText\",\n    defaultMessage: \"Select Payment Option\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384\n    },\n    __self: this\n  })), __jsx(PaymentGroup, {\n    name: \"payment\",\n    deviceType: deviceType,\n    items: card,\n    onEditDeleteField: (item, type) => handleEditDelete(item, type, 'payment'),\n    onChange: item => dispatch({\n      type: 'SET_PRIMARY_CARD',\n      payload: item.id.toString()\n    }),\n    handleAddNewCard: () => {\n      handleModal(StripePaymentForm, {\n        totalPrice\n      }, 'add-address-modal stripe-modal');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389\n    },\n    __self: this\n  })), __jsx(CheckoutSubmit, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412\n    },\n    __self: this\n  }, __jsx(Button, {\n    onClick: handleSubmit,\n    type: \"button\",\n    disabled: !isValid,\n    title: \"Proceed to Checkout\" // size='small'\n    ,\n    intlButtonId: \"proceesCheckout\",\n    loader: __jsx(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }),\n    isLoading: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413\n    },\n    __self: this\n  })))));\n};\n\nexport default Checkout;","map":{"version":3,"sources":["E:/pickbazar-master/pickbazar-master/packages/shop/containers/Checkout/Checkout.tsx"],"names":["React","useContext","useState","useEffect","Router","gql","Button","RadioCard","RadioGroup","PaymentGroup","Loader","UpdateAddress","UpdateContact","StripePaymentForm","DELETE_ADDRESS","DELETE_CARD","DELETE_CONTACT","openModal","useMutation","CartContext","CheckcoutWrapper","CheckoutContainer","OrderSummary","OrderSummaryItem","OrderLabel","OrderAmount","DeliverySchedule","Heading","DeliveryAddress","ButtonGroup","Contact","PaymentOption","CheckoutSubmit","CouponBoxWrapper","ErrorMsg","getCartProducts","getSubTotalPrice","getTotalPrice","getDiscount","getCoupon","CouponBox","CouponDisplay","ProfileContext","FormattedMessage","APPLY_COUPON","Checkout","token","deviceType","couponCode","setCouponCode","couponError","setError","processedDiscount","setProcessedDiscount","processedCoupon","setProcessedCoupon","state","dispatch","removeCoupon","discount","coupon","addCoupon","clearCart","loading","setLoading","isValid","setIsValid","address","contact","card","schedules","items","subTotalPrice","totalPrice","deleteContactMutation","deleteAddressMutation","deletePaymentCardMutation","applyedCoupon","handleSubmit","push","length","handleModal","modalComponent","modalProps","className","show","config","width","height","enableResizing","disableDragging","closeOnClickOutside","component","componentProps","item","handleEditDelete","type","name","payload","id","variables","cardId","JSON","stringify","contactId","addressId","handleApplyCoupon","data","applyCoupon","code","discountInPercent","handleOnUpdate","marginBottom","e","preventDefault","maxWidth","title","time_slot","toString","info","number"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport gql from 'graphql-tag';\nimport Button from 'components/Button/Button';\nimport RadioCard from 'components/RadioCard/RadioCard';\nimport RadioGroup from 'components/RadioGroup/RadioGroup';\nimport PaymentGroup from 'components/PaymentGroup/PaymentGroup';\nimport Loader from 'components/Loader/Loader';\nimport UpdateAddress from './Update/UpdateAddress';\nimport UpdateContact from './Update/UpdateContact';\nimport StripePaymentForm from '../Payment/StripePaymentForm';\nimport { DELETE_ADDRESS } from 'graphql/mutation/address';\nimport { DELETE_CARD } from 'graphql/mutation/card';\nimport { DELETE_CONTACT } from 'graphql/mutation/contact';\nimport { openModal } from '@redq/reuse-modal';\nimport { Product } from 'interfaces';\nimport { useMutation } from '@apollo/react-hooks';\nimport { CartContext } from 'contexts/cart/cart.context';\nimport CheckcoutWrapper, {\n  CheckoutContainer,\n  OrderSummary,\n  OrderSummaryItem,\n  OrderLabel,\n  OrderAmount,\n  DeliverySchedule,\n  Heading,\n  DeliveryAddress,\n  ButtonGroup,\n  Contact,\n  PaymentOption,\n  CheckoutSubmit,\n  CouponBoxWrapper,\n  ErrorMsg,\n} from './Checkout.style';\nimport {\n  getCartProducts,\n  getSubTotalPrice,\n  getTotalPrice,\n  getDiscount,\n  getCoupon,\n} from '../../helper/utility';\n\nimport CouponBox, { CouponDisplay } from 'components/CouponBox/CouponBox';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { FormattedMessage } from 'react-intl';\n\n// The type of props Checkout Form receives\ninterface MyFormProps {\n  products: Product[];\n  items: number;\n  oldDiscount: number;\n  oldCoupon: any;\n  price: number;\n  token: string;\n  deviceType: string;\n  subTotalPrice: any;\n}\n\nconst APPLY_COUPON = gql`\n  mutation applyCoupon($code: String!) {\n    applyCoupon(code: $code) {\n      id\n      code\n      discountInPercent\n    }\n  }\n`;\n\nconst Checkout: React.FC<MyFormProps & any> = ({ token, deviceType }) => {\n  const [couponCode, setCouponCode] = useState('');\n  const [couponError, setError] = useState('');\n  const [processedDiscount, setProcessedDiscount] = useState(getDiscount());\n  const [processedCoupon, setProcessedCoupon] = useState(getCoupon());\n  const { state, dispatch } = useContext(ProfileContext);\n  const { removeCoupon, discount, coupon, addCoupon, clearCart } = useContext(\n    CartContext\n  );\n  const [loading, setLoading] = useState(false);\n  const [isValid, setIsValid] = useState(false);\n  const { address, contact, card, schedules } = state;\n  const items = getCartProducts();\n  const subTotalPrice = getSubTotalPrice();\n  const totalPrice = getTotalPrice();\n\n  const [deleteContactMutation] = useMutation(DELETE_CONTACT);\n  const [deleteAddressMutation] = useMutation(DELETE_ADDRESS);\n  const [deletePaymentCardMutation] = useMutation(DELETE_CARD);\n  const [applyedCoupon] = useMutation(APPLY_COUPON);\n\n  const handleSubmit = async () => {\n    setLoading(true);\n    if (isValid) {\n      clearCart();\n      Router.push('/order-recived');\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    setProcessedDiscount(discount);\n    setProcessedCoupon(coupon);\n  }, [coupon]);\n\n  useEffect(() => {\n    if (\n      totalPrice > 0 &&\n      items.length > 0 &&\n      address.length &&\n      contact.length &&\n      card.length &&\n      schedules.length\n    ) {\n      setIsValid(true);\n    }\n  }, [state]);\n\n  // Add or edit modal\n  const handleModal = (\n    modalComponent: any,\n    modalProps = {},\n    className: string = 'add-address-modal'\n  ) => {\n    openModal({\n      show: true,\n      config: {\n        width: 360,\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        className: className,\n      },\n      closeOnClickOutside: true,\n      component: modalComponent,\n      componentProps: { item: modalProps },\n    });\n  };\n\n  const handleEditDelete = async (item: any, type: string, name: string) => {\n    if (type === 'edit') {\n      const modalComponent = name === 'address' ? UpdateAddress : UpdateContact;\n      handleModal(modalComponent, item);\n    } else {\n      switch (name) {\n        case 'payment':\n          dispatch({ type: 'DELETE_CARD', payload: item.id });\n\n          return await deletePaymentCardMutation({\n            variables: { cardId: JSON.stringify(item.id) },\n          });\n        case 'contact':\n          dispatch({ type: 'DELETE_CONTACT', payload: item.id });\n\n          return await deleteContactMutation({\n            variables: { contactId: JSON.stringify(item.id) },\n          });\n        case 'address':\n          dispatch({ type: 'DELETE_ADDRESS', payload: item.id });\n\n          return await deleteAddressMutation({\n            variables: { addressId: JSON.stringify(item.id) },\n          });\n        default:\n          return false;\n      }\n    }\n  };\n\n  const handleApplyCoupon = async () => {\n    const {\n      data: { applyCoupon },\n    }: any = await applyedCoupon({\n      variables: { code: couponCode },\n    });\n    if (applyCoupon && applyCoupon.discountInPercent) {\n      addCoupon(applyCoupon);\n      setCouponCode('');\n    } else {\n      setError('Invalid Coupon');\n    }\n  };\n  const handleOnUpdate = (couponCode: any) => {\n    setCouponCode(couponCode);\n  };\n\n  return (\n    <form>\n      <CheckcoutWrapper>\n        <CheckoutContainer>\n          <OrderSummary>\n            <OrderSummaryItem style={{ marginBottom: 15 }}>\n              <OrderLabel>\n                <FormattedMessage id='subTotal' defaultMessage='Subtotal' /> (\n                {items.length}{' '}\n                <FormattedMessage id='itemsText' defaultMessage='items' />)\n              </OrderLabel>\n              <OrderAmount>${subTotalPrice || 0}</OrderAmount>\n            </OrderSummaryItem>\n\n            <OrderSummaryItem style={{ marginBottom: 30 }}>\n              <OrderLabel>\n                <FormattedMessage\n                  id='shippinFeeText'\n                  defaultMessage='Shipping Fee'\n                />\n              </OrderLabel>\n              <OrderAmount>$0</OrderAmount>\n            </OrderSummaryItem>\n\n            <OrderSummaryItem\n              style={{ marginBottom: 30 }}\n              className='voucherWrapper'\n            >\n              <OrderLabel>\n                <FormattedMessage id='voucherText' defaultMessage='Voucher' />\n              </OrderLabel>\n              {processedDiscount &&\n              processedCoupon.code !== 'DEFAULT_COUPON' ? (\n                <CouponDisplay\n                  code={processedCoupon.code}\n                  sign='-'\n                  currency='$'\n                  price={discount}\n                  onClick={e => {\n                    e.preventDefault();\n                    removeCoupon();\n                  }}\n                />\n              ) : (\n                <>\n                  <CouponBoxWrapper>\n                    <CouponBox\n                      buttonTitle='Apply'\n                      intlCouponBoxPlaceholder='couponPlaceholder'\n                      onClick={handleApplyCoupon}\n                      value={couponCode}\n                      onUpdate={handleOnUpdate}\n                      style={{ maxWidth: 350, height: 50 }}\n                      intlCouponApplyButton='voucherApply'\n                    />\n                    {couponError && (\n                      <ErrorMsg>\n                        <FormattedMessage\n                          id='couponError'\n                          defaultMessage={couponError}\n                        />\n                      </ErrorMsg>\n                    )}\n                  </CouponBoxWrapper>\n                </>\n              )}\n            </OrderSummaryItem>\n\n            <OrderSummaryItem>\n              <OrderLabel>\n                <FormattedMessage id='totalText' defaultMessage='Total' />\n              </OrderLabel>\n              <OrderAmount>${totalPrice}</OrderAmount>\n            </OrderSummaryItem>\n          </OrderSummary>\n          {/* DeliverySchedule */}\n          <DeliverySchedule>\n            <Heading>\n              <FormattedMessage\n                id='deliverySchedule'\n                defaultMessage='Select Your Delivery Schedule'\n              />\n            </Heading>\n            <RadioGroup\n              items={schedules}\n              component={(item: any) => (\n                <RadioCard\n                  id={item.id}\n                  key={item.id}\n                  title={item.title}\n                  content={item.time_slot}\n                  name='schedule'\n                  checked={item.type === 'primary'}\n                  withActionButtons={false}\n                  onChange={() =>\n                    dispatch({\n                      type: 'SET_PRIMARY_SCHEDULE',\n                      payload: item.id.toString(),\n                    })\n                  }\n                />\n              )}\n            />\n          </DeliverySchedule>\n          {/* DeliveryAddress */}\n          <DeliveryAddress>\n            <Heading>\n              <FormattedMessage\n                id='checkoutDeliveryAddress'\n                defaultMessage='Select Your Delivery Address'\n              />\n            </Heading>\n            <ButtonGroup>\n              <RadioGroup\n                items={address}\n                component={(item: any) => (\n                  <RadioCard\n                    id={item.id}\n                    key={item.id}\n                    title={item.name}\n                    content={item.info}\n                    name='address'\n                    checked={item.type === 'primary'}\n                    onChange={() =>\n                      dispatch({\n                        type: 'SET_PRIMARY_ADDRESS',\n                        payload: item.id.toString(),\n                      })\n                    }\n                    onEdit={() => handleEditDelete(item, 'edit', 'address')}\n                    onDelete={() => handleEditDelete(item, 'delete', 'address')}\n                  />\n                )}\n                secondaryComponent={\n                  <Button\n                    title='Add Adderss'\n                    iconPosition='right'\n                    colors='primary'\n                    size='small'\n                    variant='outlined'\n                    type='button'\n                    intlButtonId='addAddressBtn'\n                    onClick={() =>\n                      handleModal(UpdateAddress, 'add-address-modal')\n                    }\n                  />\n                }\n              />\n            </ButtonGroup>\n          </DeliveryAddress>\n          {/* Contact number */}\n          <Contact>\n            <Heading>\n              <FormattedMessage\n                id='contactNumberText'\n                defaultMessage='Select Your Contact Number'\n              />\n            </Heading>\n            <ButtonGroup>\n              <RadioGroup\n                items={contact}\n                component={(item: any) => (\n                  <RadioCard\n                    id={item.id}\n                    key={item.id}\n                    title={item.type}\n                    content={item.number}\n                    checked={item.type === 'primary'}\n                    onChange={() =>\n                      dispatch({\n                        type: 'SET_PRIMARY_CONTACT',\n                        payload: item.id.toString(),\n                      })\n                    }\n                    name='contact'\n                    onEdit={() => handleEditDelete(item, 'edit', 'contact')}\n                    onDelete={() => handleEditDelete(item, 'delete', 'contact')}\n                  />\n                )}\n                secondaryComponent={\n                  <Button\n                    title='Add Contact'\n                    iconPosition='right'\n                    colors='primary'\n                    size='small'\n                    variant='outlined'\n                    type='button'\n                    intlButtonId='addContactBtn'\n                    onClick={() =>\n                      handleModal(UpdateContact, 'add-contact-modal')\n                    }\n                  />\n                }\n              />\n            </ButtonGroup>\n          </Contact>\n          {/* PaymentOption */}\n          <PaymentOption>\n            <Heading>\n              <FormattedMessage\n                id='selectPaymentText'\n                defaultMessage='Select Payment Option'\n              />\n            </Heading>\n            <PaymentGroup\n              name='payment'\n              deviceType={deviceType}\n              items={card}\n              onEditDeleteField={(item: any, type: string) =>\n                handleEditDelete(item, type, 'payment')\n              }\n              onChange={(item: any) =>\n                dispatch({\n                  type: 'SET_PRIMARY_CARD',\n                  payload: item.id.toString(),\n                })\n              }\n              handleAddNewCard={() => {\n                handleModal(\n                  StripePaymentForm,\n                  { totalPrice },\n                  'add-address-modal stripe-modal'\n                );\n              }}\n            />\n          </PaymentOption>\n          {/* CheckoutSubmit */}\n          <CheckoutSubmit>\n            <Button\n              onClick={handleSubmit}\n              type='button'\n              disabled={!isValid}\n              title='Proceed to Checkout'\n              // size='small'\n              intlButtonId='proceesCheckout'\n              loader={<Loader />}\n              isLoading={loading}\n            />\n          </CheckoutSubmit>\n        </CheckoutContainer>\n      </CheckcoutWrapper>\n    </form>\n  );\n};\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}