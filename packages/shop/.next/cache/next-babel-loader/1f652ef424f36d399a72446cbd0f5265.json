{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\pickbazar-master\\\\pickbazar-master\\\\packages\\\\shop\\\\containers\\\\Profile\\\\Settings\\\\Settings.tsx\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Col } from 'react-styled-flexboxgrid';\nimport { openModal } from '@redq/reuse-modal';\nimport RadioCard from 'components/RadioCard/RadioCard';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { DELETE_ADDRESS } from 'graphql/mutation/address';\nimport { DELETE_CARD } from 'graphql/mutation/card';\nimport { DELETE_CONTACT } from 'graphql/mutation/contact';\nimport StripePaymentForm from '../../Payment/StripePaymentForm';\nimport { SettingsForm, SettingsFormContent, HeadingSection, Title, Input, Row, ButtonGroup } from './Settings.style';\nimport RadioGroup from 'components/RadioGroup/RadioGroup';\nimport PaymentGroup from 'components/PaymentGroup/PaymentGroup';\nimport UpdateAddress from '../../Checkout/Update/UpdateAddress';\nimport UpdateContact from '../../Checkout/Update/UpdateContact';\nimport Button from 'components/Button/Button';\nimport { UPDATE_ME } from 'graphql/mutation/me';\nimport { FormattedMessage } from 'react-intl';\n\nvar SettingsContent = function SettingsContent(_ref) {\n  var deviceType = _ref.deviceType;\n\n  var _useContext = useContext(ProfileContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var _useMutation = useMutation(UPDATE_ME),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      updateMeMutation = _useMutation2[0];\n\n  var _useMutation3 = useMutation(DELETE_CONTACT),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      deleteContactMutation = _useMutation4[0];\n\n  var _useMutation5 = useMutation(DELETE_ADDRESS),\n      _useMutation6 = _slicedToArray(_useMutation5, 1),\n      deleteAddressMutation = _useMutation6[0];\n\n  var _useMutation7 = useMutation(DELETE_CARD),\n      _useMutation8 = _slicedToArray(_useMutation7, 1),\n      deletePaymentCardMutation = _useMutation8[0];\n\n  var address = state.address,\n      contact = state.contact,\n      card = state.card; // const addressList =\n  //   address && address.length ? modifyaddressData(address) : [];\n\n  var handleChange = function handleChange(value, field) {\n    dispatch({\n      type: 'HANDLE_ON_INPUT_CHANGE',\n      payload: {\n        value: value,\n        field: field\n      }\n    });\n  }; // Add or edit modal\n\n\n  var handleModal = function handleModal(modalComponent) {\n    var modalProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var className = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'add-address-modal';\n    openModal({\n      show: true,\n      config: {\n        width: 360,\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        className: className\n      },\n      closeOnClickOutside: true,\n      component: modalComponent,\n      componentProps: {\n        item: modalProps\n      }\n    });\n  };\n\n  var handleEditDelete = function handleEditDelete(item, type, name) {\n    var modalComponent;\n    return _regeneratorRuntime.async(function handleEditDelete$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(type === 'edit')) {\n              _context.next = 5;\n              break;\n            }\n\n            modalComponent = name === 'address' ? UpdateAddress : UpdateContact;\n            handleModal(modalComponent, item);\n            _context.next = 22;\n            break;\n\n          case 5:\n            console.log(name, item, type, 'delete');\n            _context.t0 = name;\n            _context.next = _context.t0 === 'payment' ? 9 : _context.t0 === 'contact' ? 13 : _context.t0 === 'address' ? 17 : 21;\n            break;\n\n          case 9:\n            dispatch({\n              type: 'DELETE_CARD',\n              payload: item.id\n            });\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(deletePaymentCardMutation({\n              variables: {\n                cardId: _JSON$stringify(item.id)\n              }\n            }));\n\n          case 12:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 13:\n            dispatch({\n              type: 'DELETE_CONTACT',\n              payload: item.id\n            });\n            _context.next = 16;\n            return _regeneratorRuntime.awrap(deleteContactMutation({\n              variables: {\n                contactId: _JSON$stringify(item.id)\n              }\n            }));\n\n          case 16:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 17:\n            dispatch({\n              type: 'DELETE_ADDRESS',\n              payload: item.id\n            });\n            _context.next = 20;\n            return _regeneratorRuntime.awrap(deleteAddressMutation({\n              variables: {\n                addressId: _JSON$stringify(item.id)\n              }\n            }));\n\n          case 20:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 21:\n            return _context.abrupt(\"return\", false);\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  var handleSave = function handleSave() {\n    var name, email;\n    return _regeneratorRuntime.async(function handleSave$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            name = state.name, email = state.email;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(updateMeMutation({\n              variables: {\n                meInput: _JSON$stringify({\n                  name: name,\n                  email: email\n                })\n              }\n            }));\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  };\n\n  var handleData = function handleData(data) {\n    console.log(data);\n  };\n\n  return __jsx(SettingsForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, __jsx(SettingsFormContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, __jsx(HeadingSection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, __jsx(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, __jsx(FormattedMessage, {\n    id: \"profilePageTitle\",\n    defaultMessage: \"Your Profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }))), __jsx(Row, {\n    style: {\n      alignItems: 'flex-end',\n      marginBottom: '50px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, __jsx(Col, {\n    xs: 12,\n    sm: 5,\n    md: 5,\n    lg: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, __jsx(Input, {\n    type: \"text\",\n    label: \"Name\",\n    value: state.name,\n    onUpdate: function onUpdate(value) {\n      return handleChange(value, 'name');\n    },\n    style: {\n      backgroundColor: '#F7F7F7'\n    },\n    intlInputLabelId: \"profileNameField\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  })), __jsx(Col, {\n    xs: 12,\n    sm: 5,\n    md: 5,\n    lg: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, __jsx(Input, {\n    type: \"email\",\n    label: \"Email Address\",\n    value: state.email,\n    onUpdate: function onUpdate(value) {\n      return handleChange(value, 'email');\n    },\n    style: {\n      backgroundColor: '#F7F7F7'\n    },\n    intlInputLabelId: \"profileEmailField\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  })), __jsx(Col, {\n    xs: 12,\n    sm: 2,\n    md: 2,\n    lg: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, __jsx(Button, {\n    title: \"Save\",\n    onClick: handleSave,\n    style: {\n      width: '100%'\n    },\n    intlButtonId: \"profileSaveBtn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }))), __jsx(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, __jsx(Col, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    lg: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, __jsx(SettingsFormContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, __jsx(HeadingSection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, __jsx(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, __jsx(FormattedMessage, {\n    id: \"contactNumberTItle\",\n    defaultMessage: \"Contact Numbers\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }))), __jsx(ButtonGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, __jsx(RadioGroup, {\n    items: contact,\n    component: function component(item) {\n      return __jsx(RadioCard, {\n        id: item.id,\n        key: item.id,\n        title: item.type,\n        content: item.number,\n        checked: item.type === 'primary',\n        onChange: function onChange() {\n          return dispatch({\n            type: 'SET_PRIMARY_CONTACT',\n            payload: item.id.toString()\n          });\n        },\n        name: \"contact\",\n        onEdit: function onEdit() {\n          return handleEditDelete(item, 'edit', 'contact');\n        },\n        onDelete: function onDelete() {\n          return handleEditDelete(item, 'delete', 'contact');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      });\n    },\n    secondaryComponent: __jsx(Button, {\n      title: \"Add Contact\",\n      iconPosition: \"right\",\n      colors: \"primary\",\n      size: \"small\",\n      variant: \"outlined\",\n      type: \"button\",\n      intlButtonId: \"addContactBtn\",\n      onClick: function onClick() {\n        return handleModal(UpdateContact, {}, 'add-contact-modal');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }))))), __jsx(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, __jsx(Col, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    lg: 12,\n    style: {\n      position: 'relative'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, __jsx(SettingsFormContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, __jsx(HeadingSection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, __jsx(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, __jsx(FormattedMessage, {\n    id: \"deliveryAddresTitle\",\n    defaultMessage: \"Delivery Address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }))), __jsx(ButtonGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, __jsx(RadioGroup, {\n    items: address,\n    component: function component(item) {\n      return __jsx(RadioCard, {\n        id: item.id,\n        key: item.id,\n        title: item.name,\n        content: item.info,\n        name: \"address\",\n        checked: item.type === 'primary',\n        onChange: function onChange() {\n          return dispatch({\n            type: 'SET_PRIMARY_ADDRESS',\n            payload: item.id.toString()\n          });\n        },\n        onEdit: function onEdit() {\n          return handleEditDelete(item, 'edit', 'address');\n        },\n        onDelete: function onDelete() {\n          return handleEditDelete(item, 'delete', 'address');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      });\n    },\n    secondaryComponent: __jsx(Button, {\n      title: \"Add Adderss\",\n      iconPosition: \"right\",\n      colors: \"primary\",\n      size: \"small\",\n      variant: \"outlined\",\n      type: \"button\",\n      intlButtonId: \"addAddressBtn\",\n      onClick: function onClick() {\n        return handleModal(UpdateAddress, {}, 'add-address-modal');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }))))), __jsx(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, __jsx(Col, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    lg: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }, __jsx(SettingsFormContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, __jsx(HeadingSection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, __jsx(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, __jsx(FormattedMessage, {\n    id: \"paymentCardTitle\",\n    defaultMessage: \"Payments Card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }))), __jsx(PaymentGroup, {\n    name: \"payment\",\n    deviceType: deviceType,\n    items: card,\n    onEditDeleteField: function onEditDeleteField(item, type) {\n      return handleEditDelete(item, type, 'payment');\n    },\n    onChange: function onChange(item) {\n      return dispatch({\n        type: 'SET_PRIMARY_CARD',\n        payload: item.id.toString()\n      });\n    },\n    handleAddNewCard: function handleAddNewCard() {\n      handleModal(StripePaymentForm, {\n        buttonText: 'Add Card'\n      }, 'add-address-modal stripe-modal');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }))))));\n};\n\nexport default SettingsContent;","map":{"version":3,"sources":["E:/pickbazar-master/pickbazar-master/packages/shop/containers/Profile/Settings/Settings.tsx"],"names":["React","useContext","useMutation","Col","openModal","RadioCard","ProfileContext","DELETE_ADDRESS","DELETE_CARD","DELETE_CONTACT","StripePaymentForm","SettingsForm","SettingsFormContent","HeadingSection","Title","Input","Row","ButtonGroup","RadioGroup","PaymentGroup","UpdateAddress","UpdateContact","Button","UPDATE_ME","FormattedMessage","SettingsContent","deviceType","state","dispatch","updateMeMutation","deleteContactMutation","deleteAddressMutation","deletePaymentCardMutation","address","contact","card","handleChange","value","field","type","payload","handleModal","modalComponent","modalProps","className","show","config","width","height","enableResizing","disableDragging","closeOnClickOutside","component","componentProps","item","handleEditDelete","name","console","log","id","variables","cardId","contactId","addressId","handleSave","email","meInput","handleData","data","alignItems","marginBottom","backgroundColor","number","toString","position","info","buttonText"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Col } from 'react-styled-flexboxgrid';\nimport { openModal } from '@redq/reuse-modal';\nimport RadioCard from 'components/RadioCard/RadioCard';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { DELETE_ADDRESS } from 'graphql/mutation/address';\nimport { DELETE_CARD } from 'graphql/mutation/card';\nimport { DELETE_CONTACT } from 'graphql/mutation/contact';\nimport StripePaymentForm from '../../Payment/StripePaymentForm';\nimport {\n  SettingsForm,\n  SettingsFormContent,\n  HeadingSection,\n  Title,\n  Input,\n  Row,\n  ButtonGroup,\n} from './Settings.style';\nimport RadioGroup from 'components/RadioGroup/RadioGroup';\nimport PaymentGroup from 'components/PaymentGroup/PaymentGroup';\nimport UpdateAddress from '../../Checkout/Update/UpdateAddress';\nimport UpdateContact from '../../Checkout/Update/UpdateContact';\nimport Button from 'components/Button/Button';\nimport { UPDATE_ME } from 'graphql/mutation/me';\nimport { FormattedMessage } from 'react-intl';\n\ntype SettingsContentProps = {\n  deviceType?: {\n    mobile: boolean;\n    tablet: boolean;\n    desktop: boolean;\n  };\n};\n\nconst SettingsContent: React.FC<SettingsContentProps> = ({ deviceType }) => {\n  const { state, dispatch } = useContext(ProfileContext);\n  const [updateMeMutation] = useMutation(UPDATE_ME);\n  const [deleteContactMutation] = useMutation(DELETE_CONTACT);\n  const [deleteAddressMutation] = useMutation(DELETE_ADDRESS);\n  const [deletePaymentCardMutation] = useMutation(DELETE_CARD);\n\n  const { address, contact, card } = state;\n  // const addressList =\n  //   address && address.length ? modifyaddressData(address) : [];\n\n  const handleChange = (value: string, field: string) => {\n    dispatch({ type: 'HANDLE_ON_INPUT_CHANGE', payload: { value, field } });\n  };\n  // Add or edit modal\n  const handleModal = (\n    modalComponent: any,\n    modalProps = {},\n    className: string = 'add-address-modal'\n  ) => {\n    openModal({\n      show: true,\n      config: {\n        width: 360,\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        className: className,\n      },\n      closeOnClickOutside: true,\n      component: modalComponent,\n      componentProps: { item: modalProps },\n    });\n  };\n\n  const handleEditDelete = async (item: any, type: string, name: string) => {\n    if (type === 'edit') {\n      const modalComponent = name === 'address' ? UpdateAddress : UpdateContact;\n      handleModal(modalComponent, item);\n    } else {\n      console.log(name, item, type, 'delete');\n      switch (name) {\n        case 'payment':\n          dispatch({ type: 'DELETE_CARD', payload: item.id });\n\n          return await deletePaymentCardMutation({\n            variables: { cardId: JSON.stringify(item.id) },\n          });\n        case 'contact':\n          dispatch({ type: 'DELETE_CONTACT', payload: item.id });\n\n          return await deleteContactMutation({\n            variables: { contactId: JSON.stringify(item.id) },\n          });\n        case 'address':\n          dispatch({ type: 'DELETE_ADDRESS', payload: item.id });\n\n          return await deleteAddressMutation({\n            variables: { addressId: JSON.stringify(item.id) },\n          });\n        default:\n          return false;\n      }\n    }\n  };\n\n  const handleSave = async () => {\n    const { name, email } = state;\n    await updateMeMutation({\n      variables: { meInput: JSON.stringify({ name, email }) },\n    });\n  };\n\n  const handleData = (data: any) => {\n    console.log(data);\n  };\n\n  return (\n    <SettingsForm>\n      <SettingsFormContent>\n        <HeadingSection>\n          <Title>\n            <FormattedMessage\n              id='profilePageTitle'\n              defaultMessage='Your Profile'\n            />\n          </Title>\n        </HeadingSection>\n        <Row style={{ alignItems: 'flex-end', marginBottom: '50px' }}>\n          <Col xs={12} sm={5} md={5} lg={5}>\n            <Input\n              type='text'\n              label='Name'\n              value={state.name}\n              onUpdate={(value: string) => handleChange(value, 'name')}\n              style={{ backgroundColor: '#F7F7F7' }}\n              intlInputLabelId='profileNameField'\n            />\n          </Col>\n\n          <Col xs={12} sm={5} md={5} lg={5}>\n            <Input\n              type='email'\n              label='Email Address'\n              value={state.email}\n              onUpdate={(value: string) => handleChange(value, 'email')}\n              style={{ backgroundColor: '#F7F7F7' }}\n              intlInputLabelId='profileEmailField'\n            />\n          </Col>\n\n          <Col xs={12} sm={2} md={2} lg={2}>\n            <Button\n              title='Save'\n              onClick={handleSave}\n              style={{ width: '100%' }}\n              intlButtonId='profileSaveBtn'\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12} sm={12} md={12} lg={12}>\n            <SettingsFormContent>\n              <HeadingSection>\n                <Title>\n                  <FormattedMessage\n                    id='contactNumberTItle'\n                    defaultMessage='Contact Numbers'\n                  />\n                </Title>\n              </HeadingSection>\n              <ButtonGroup>\n                <RadioGroup\n                  items={contact}\n                  component={(item: any) => (\n                    <RadioCard\n                      id={item.id}\n                      key={item.id}\n                      title={item.type}\n                      content={item.number}\n                      checked={item.type === 'primary'}\n                      onChange={() =>\n                        dispatch({\n                          type: 'SET_PRIMARY_CONTACT',\n                          payload: item.id.toString(),\n                        })\n                      }\n                      name='contact'\n                      onEdit={() => handleEditDelete(item, 'edit', 'contact')}\n                      onDelete={() =>\n                        handleEditDelete(item, 'delete', 'contact')\n                      }\n                    />\n                  )}\n                  secondaryComponent={\n                    <Button\n                      title='Add Contact'\n                      iconPosition='right'\n                      colors='primary'\n                      size='small'\n                      variant='outlined'\n                      type='button'\n                      intlButtonId='addContactBtn'\n                      onClick={() =>\n                        handleModal(UpdateContact, {}, 'add-contact-modal')\n                      }\n                    />\n                  }\n                />\n              </ButtonGroup>\n            </SettingsFormContent>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12} sm={12} md={12} lg={12} style={{ position: 'relative' }}>\n            <SettingsFormContent>\n              <HeadingSection>\n                <Title>\n                  <FormattedMessage\n                    id='deliveryAddresTitle'\n                    defaultMessage='Delivery Address'\n                  />\n                </Title>\n              </HeadingSection>\n              <ButtonGroup>\n                <RadioGroup\n                  items={address}\n                  component={(item: any) => (\n                    <RadioCard\n                      id={item.id}\n                      key={item.id}\n                      title={item.name}\n                      content={item.info}\n                      name='address'\n                      checked={item.type === 'primary'}\n                      onChange={() =>\n                        dispatch({\n                          type: 'SET_PRIMARY_ADDRESS',\n                          payload: item.id.toString(),\n                        })\n                      }\n                      onEdit={() => handleEditDelete(item, 'edit', 'address')}\n                      onDelete={() =>\n                        handleEditDelete(item, 'delete', 'address')\n                      }\n                    />\n                  )}\n                  secondaryComponent={\n                    <Button\n                      title='Add Adderss'\n                      iconPosition='right'\n                      colors='primary'\n                      size='small'\n                      variant='outlined'\n                      type='button'\n                      intlButtonId='addAddressBtn'\n                      onClick={() =>\n                        handleModal(UpdateAddress, {}, 'add-address-modal')\n                      }\n                    />\n                  }\n                />\n              </ButtonGroup>\n            </SettingsFormContent>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={12} sm={12} md={12} lg={12}>\n            <SettingsFormContent>\n              <HeadingSection>\n                <Title>\n                  <FormattedMessage\n                    id='paymentCardTitle'\n                    defaultMessage='Payments Card'\n                  />\n                </Title>\n              </HeadingSection>\n              <PaymentGroup\n                name='payment'\n                deviceType={deviceType}\n                items={card}\n                onEditDeleteField={(item: any, type: string) =>\n                  handleEditDelete(item, type, 'payment')\n                }\n                onChange={(item: any) =>\n                  dispatch({\n                    type: 'SET_PRIMARY_CARD',\n                    payload: item.id.toString(),\n                  })\n                }\n                handleAddNewCard={() => {\n                  handleModal(\n                    StripePaymentForm,\n                    { buttonText: 'Add Card' },\n                    'add-address-modal stripe-modal'\n                  );\n                }}\n              />\n            </SettingsFormContent>\n          </Col>\n        </Row>\n      </SettingsFormContent>\n    </SettingsForm>\n  );\n};\n\nexport default SettingsContent;\n"]},"metadata":{},"sourceType":"module"}